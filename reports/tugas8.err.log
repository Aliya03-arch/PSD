Traceback (most recent call last):
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "c:\users\thinkpad\appdata\local\programs\python\python39\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Kode

pip install openeo

# ==============================================================
# LANGKAH 1: PENGUMPULAN DATA - Sentinel-5P NO2 di Pamekasan, Madura
# ==============================================================

import openeo
import pandas as pd
import os
import time

print("="*70)
print("LANGKAH 1: PENGUMPULAN DATA ")
print("="*70)

# 1. Koneksi ke Copernicus Data Space
connection = openeo.connect("openeo.dataspace.copernicus.eu").authenticate_oidc()

# 2. Area of Interest (AOI) - Sekitar Kabupaten Pamekasan, Jawa Timur
aoi = {
    "type": "Polygon",
    "coordinates": [
        [
            [113.45, -7.12],  # barat laut
            [113.45, -7.20],  # barat daya
            [113.55, -7.20],  # tenggara
            [113.55, -7.12],  # timur laut
            [113.45, -7.12],  # kembali ke titik awal
        ]
    ],
}

# 3. Load data Sentinel-5P NO2
s5p = connection.load_collection(
    "SENTINEL_5P_L2",
    spatial_extent={
        "west": 113.45,
        "south": -7.20,
        "east": 113.55,
        "north": -7.12,
    },
    temporal_extent=["2024-10-01", "2025-10-31"], 
    bands=["NO2"],
)

# 4. Mask nilai negatif
def mask_invalid(x):
    return x < 0

s5p_masked = s5p.mask(s5p.apply(mask_invalid))

# 5. Agregasi temporal (harian)
daily_mean = s5p_masked.aggregate_temporal_period(period="day", reducer="mean")

# 6. Agregasi spasial (mean dalam AOI)
daily_mean_aoi = daily_mean.aggregate_spatial(geometries=aoi, reducer="mean")

# 7. Jalankan batch job
job = daily_mean_aoi.execute_batch(out_format="CSV")
print("\nMenunggu job OpenEO selesai...")

while True:
    status = job.describe()["status"]
    print(f"Status: {status}")
    if status == "finished":
        break
    elif status == "error":
        raise RuntimeError("Job gagal")
    time.sleep(15)

# 8. Unduh hasil
results = job.get_results()
results.download_files("no2_results")

# 9. Baca file CSV
csv_files = [f for f in os.listdir("no2_results") if f.endswith(".csv")]
if len(csv_files) == 0:
    raise FileNotFoundError("Tidak ada file CSV yang diunduh dari hasil OpenEO.")

df = pd.read_csv(os.path.join("no2_results", csv_files[0]))

# 10. Data preprocessing
if "date" in df.columns:
    df["date"] = pd.to_datetime(df["date"], errors="coerce")
    df = df.sort_values("date").reset_index(drop=True)
    df.to_csv("timeseries.csv", index=False)

    print(f"\nData berhasil dikumpulkan")
    print(f"  - Total records: {len(df)}")
    print(f"  - Periode: {df['date'].min()} hingga {df['date'].max()}")
    print(f"  - File: timeseries.csv")
    print(f"\nData pertama (5 baris):")
    print(df.head())
else:
    print("\n⚠️ Tidak ditemukan kolom 'date' dalam hasil CSV. Cek format hasil dari OpenEO.") 
------------------


[1;36m  Cell [1;32mIn[1], line 3[1;36m[0m
[1;33m    pip install openeo[0m
[1;37m        ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax


